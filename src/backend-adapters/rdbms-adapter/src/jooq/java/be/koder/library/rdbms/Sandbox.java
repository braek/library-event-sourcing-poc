/*
 * This file is generated by jOOQ.
 */
package be.koder.library.rdbms;


import be.koder.library.rdbms.tables.Event;
import be.koder.library.rdbms.tables.FlywaySchemaHistory;
import be.koder.library.rdbms.tables.Tag;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sandbox extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>sandbox</code>
     */
    public static final Sandbox SANDBOX = new Sandbox();

    /**
     * The table <code>sandbox.event</code>.
     */
    public final Event EVENT = Event.EVENT;

    /**
     * The table <code>sandbox.flyway_schema_history</code>.
     */
    public final FlywaySchemaHistory FLYWAY_SCHEMA_HISTORY = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY;

    /**
     * The table <code>sandbox.tag</code>.
     */
    public final Tag TAG = Tag.TAG;

    /**
     * No further instances allowed
     */
    private Sandbox() {
        super("sandbox", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        return Arrays.<Sequence<?>>asList(
            Sequences.EVENT_SEQUENCE_ID_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
            Event.EVENT,
            FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
            Tag.TAG);
    }
}
