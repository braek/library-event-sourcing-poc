plugins {
    id 'org.flywaydb.flyway' version '9.8.1'
    id 'nu.studer.jooq' version '5.2.1'
}

configurations {
    flywayMigration
}

dependencies {
    implementation project(':domain')
    implementation project(':queries')
    implementation project(':vocabulary')

    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation project(':test-doubles')

    runtimeOnly 'org.postgresql:postgresql'

    flywayMigration 'org.postgresql:postgresql'
    jooqGenerator 'org.postgresql:postgresql'
}

flyway {
    configurations = ['flywayMigration']
    url = 'jdbc:postgresql://localhost:6000/sandbox'
    user = 'sandbox'
    password = 'sandbox'
}

jooq {
    configurations {
        main {
            generateSchemaSourceOnCompilation = false
            generationTool {
                logging = org.jooq.meta.jaxb.Logging.DEBUG
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = flyway.url
                    user = flyway.user
                    password = flyway.password
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        inputSchema = 'sandbox'
                    }
                    generate {
                        deprecated = false
                        records = true
                        immutablePojos = false
                        fluentSetters = true
                    }
                    target {
                        packageName = 'be.koder.library.rdbms'
                        directory = 'src/jooq/java'
                    }
                }
            }
        }
    }
}

sourceSets {
    main {
        kotlin {}
    }
    jooq {
        java {}
    }
    test {
        kotlin {}
    }
}